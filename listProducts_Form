import 'package:flutter/material.dart';

void main() {
  runApp(MainApp());
}

class MainApp extends StatefulWidget {
  MainApp({Key? key}) : super(key: key);

  @override
  _MainAppState createState() => _MainAppState();
}

class _MainAppState extends State<MainApp> {
  // Initialisation de la liste par défaut en dur 
  List<Map<String, dynamic>> produits = [
    {'name': 'Rocher', 'marque': 'Ferrero', 'quantite': 2, 'descriptif': 'Chocolat', 'imageUrl': 'https://media.carrefour.fr/medias/2492169d51f43977a1addb8577183cf3/p_200x200/08000500373118-h1n1-s25.jpg'},
    {'name': 'Chocapic', 'marque': 'Nestlé', 'quantite': 3, 'descriptif': 'Céréale au chocolat', 'imageUrl': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSddlMBUrVU41EBhHr3XLYfZEc7LAHWXFA1nw&usqp=CAU'},
  ];

  TextEditingController produitNameController = TextEditingController();
  TextEditingController marqueController = TextEditingController();
  TextEditingController quantiteController = TextEditingController();
  TextEditingController descriptifController = TextEditingController();
  TextEditingController imageUrlController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          backgroundColor: Colors.red,
          title: Text('Liste de Produits'),
        ),
        body: Column(
          children: [
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: Column(
                children: [
                  // Ajoute un champ input
                  TextField(
                    controller: produitNameController,
                    decoration: InputDecoration(
                      labelText: 'Nom du produit',
                    ),
                  ),
                  TextField(
                    controller: marqueController,
                    decoration: InputDecoration(
                      labelText: 'Marque',
                    ),
                  ),
                  TextField(
                    controller: quantiteController,
                    decoration: InputDecoration(
                      labelText: 'Quantité',
                    ),
                    keyboardType: TextInputType.number,
                  ),
                  TextField(
                    controller: descriptifController,
                    decoration: InputDecoration(
                      labelText: 'Descriptif',
                    ),
                  ),
                  TextField(
                    controller: imageUrlController,
                    decoration: InputDecoration(
                      labelText: 'Url image',
                    ),
                  ),
                ],
              ),
            ),
            Row(
              children: [
                // Ajoute un bouton 
                ElevatedButton(
                  onPressed: () {
                    ajouterProduit();
                  },
                  child: Text('Ajouter Produit'),
                ),
                SizedBox(width: 8), // Espace entre les boutons
                ElevatedButton(
                  onPressed: () {},
                  child: Text('Annuler'),
                ),
              ],
            ),
            Expanded(
              child: ListView.builder(
                itemCount: produits.length,
                itemBuilder: (context, index) {
                  Map<String, dynamic> produit = produits[index];
                  return ListTile(
                    title: Text(produit['name'] ?? ''),
                    subtitle: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text('Marque: ${produit['marque']}, Quantité: ${produit['quantite']}, Descriptif: ${produit['descriptif']}'),
                      ],
                    ),
                    // Ce qui permet l'affichage de l'image du produit
                    leading: CircleAvatar(
                      backgroundImage: NetworkImage(produit['imageUrl']),
                    ),
                    onTap: (){}, // Permet que les éléments soient cliquable 
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
  // Fonction qui permet l'ajout des produits
  void ajouterProduit() {

    // On récupère les différents input
    String produitName = produitNameController.text;
    String marque = marqueController.text;
    String quantite = quantiteController.text;
    String descriptif = descriptifController.text;
    String imageUrl = imageUrlController.text;

    // On attend l'intégralité (hormis l'image) du formulaire pour pouvoir insérer et finalement afficher les éléments.
    if (produitName.isNotEmpty && marque.isNotEmpty && quantite.isNotEmpty && descriptif.isNotEmpty) {
      setState(() {
        produits.add({
          'name': produitName,
          'marque': marque,
          'quantite': quantite,
          'descriptif': descriptif,
          'imageUrl': imageUrl
        });
        // Permet d'effacer les champs après avoir ajouté le produit
        produitNameController.clear();
        marqueController.clear();
        quantiteController.clear();
        descriptifController.clear();
        imageUrlController.clear();
      });
    // Sinon on affiche un message sur la console pour l'instant
    }else{
      print("Insérez les éléments attendu");
    }
  }
}
